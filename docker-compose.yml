version: '3.8'
services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      JAVA_TOOL_OPTIONS: ""
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      # Ensure the app uses the file-based H2 DB inside /app/data (mounted from host)
      SPRING_DATASOURCE_URL: "jdbc:h2:file:./data/customerdb"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: ""
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: "org.h2.Driver"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    volumes:
      # Mount a dedicated h2 data folder so H2 file database (jdbc:h2:file:./data/customerdb)
      # is persisted on the host and available across container restarts.
      - ./data/h2:/app/data
  kafka:
    image: confluentinc/cp-kafka:8.1.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092" # host access (PLAINTEXT_HOST)
      - "29092:29092" # internal broker listener advertised to other containers
      - "29093:29093" # controller listener
    environment:
      # Run combined broker+controller for local development
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      # Controller quorum voters (single-node cluster)
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      # Listeners: broker internal, controller, and a host-facing listener
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      # Advertise an internal broker address for containers and a host address for host tools
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      # A fixed cluster id for development â€” Confluent image will use this for formatting metadata
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
